@{
    ViewData["Title"] = "Register";
}

<h2>Register</h2>

@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <strong>Error!</strong> Please correct the following errors:
        <ul>
            @foreach (var modelError in ViewData.ModelState.Values.SelectMany(v => v.Errors))
            {
                <li>@modelError.ErrorMessage</li>
            }
        </ul>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<form method="post" asp-controller="Auth" asp-action="Register" id="registerForm">
    <div class="form-group mb-4">
        <label for="Name">Name</label>
        <input type="text" name="Name" class="form-control" required placeholder="Enter your name" />
        <span class="text-danger" id="nameError"></span>
    </div>
    <div class="form-group mb-4">
        <label for="Email">Email</label>
        <input type="email" name="Email" class="form-control" required placeholder="Enter your email" />
        <span class="text-danger" id="emailError"></span>
    </div>
    <div class="form-group mb-4">
        <label for="Password">Password</label>
        <input type="password" name="Password" class="form-control" required placeholder="Enter your password" />
        <span class="text-danger" id="passwordError"></span>
    </div>
    <div class="form-group mb-4">
        <label for="Address">Address</label>
        <input type="text" name="Address" class="form-control" placeholder="Enter your address" />
        <span class="text-danger" id="addressError"></span>
    </div>
    <div class="form-group mb-4">
        <label for="Phone">Phone</label>
        <input type="text" name="Phone" class="form-control" placeholder="Enter your phone number (e.g., 01XXXXXXXXX)" />
        <span class="text-danger" id="phoneError"></span>
    </div>
    <button type="submit" class="btn btn-primary">Register</button>
</form>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Function to show alert message
            function showAlert(message, type = 'danger') {
                const alertHtml = `
                    <div class="alert alert-${type} alert-dismissible fade show" role="alert">
                        ${message}
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                `;
                $('#registerForm').prepend(alertHtml);
                
                // Auto-hide alert after 5 seconds
                setTimeout(function() {
                    $('.alert').alert('close');
                }, 5000);
            }

            $("#registerForm").validate({
                rules: {
                    Name: {
                        required: true,
                        minlength: 3
                    },
                    Email: {
                        required: true,
                        email: true
                    },
                    Password: {
                        required: true,
                        minlength: 6
                    },
                    Phone: {
                        pattern: /^01[0-9]{9}$/,
                        minlength: 11,
                        maxlength: 11
                    }
                },
                messages: {
                    Name: {
                        required: "Please enter your name",
                        minlength: "Name must be at least 3 characters long"
                    },
                    Email: {
                        required: "Please enter your email",
                        email: "Please enter a valid email address"
                    },
                    Password: {
                        required: "Please enter your password",
                        minlength: "Password must be at least 6 characters long"
                    },
                    Phone: {
                        pattern: "Phone number must start with '01' and be exactly 11 digits",
                        minlength: "Phone number must be exactly 11 digits",
                        maxlength: "Phone number must be exactly 11 digits"
                    }
                },
                errorElement: "span",
                errorClass: "text-danger",
                errorPlacement: function (error, element) {
                    error.insertAfter(element);
                },
                invalidHandler: function(event, validator) {
                    // Show alert for the first error
                    const firstError = validator.errorList[0];
                    if (firstError) {
                        showAlert(firstError.message);
                    }
                },
                submitHandler: function(form) {
                    // Show success message before submitting
                    showAlert('Form is valid! Submitting...', 'success');
                    form.submit();
                }
            });

            // Handle phone number input
            $('input[name="Phone"]').on('input', function() {
                const phone = $(this).val();
                if (phone.length > 0 && !phone.startsWith('01')) {
                    showAlert('Phone number must start with "01"');
                }
            });
        });
    </script>
}
